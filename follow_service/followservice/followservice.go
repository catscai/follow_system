// Code generated by goctl. DO NOT EDIT!
// Source: follow_service.proto

package followservice

import (
	"context"

	"follow_system/follow_service/root/go/src/follow_system/pb/follow_service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FollowRQ        = follow_service.FollowRQ
	FollowRS        = follow_service.FollowRS
	GetFansListRQ   = follow_service.GetFansListRQ
	GetFansListRS   = follow_service.GetFansListRS
	GetFollowListRQ = follow_service.GetFollowListRQ
	GetFollowListRS = follow_service.GetFollowListRS

	FollowService interface {
		Follow(ctx context.Context, in *FollowRQ, opts ...grpc.CallOption) (*FollowRS, error)
		GetFollowList(ctx context.Context, in *GetFollowListRQ, opts ...grpc.CallOption) (*GetFollowListRS, error)
		GetFansList(ctx context.Context, in *GetFansListRQ, opts ...grpc.CallOption) (*GetFansListRS, error)
	}

	defaultFollowService struct {
		cli zrpc.Client
	}
)

func NewFollowService(cli zrpc.Client) FollowService {
	return &defaultFollowService{
		cli: cli,
	}
}

func (m *defaultFollowService) Follow(ctx context.Context, in *FollowRQ, opts ...grpc.CallOption) (*FollowRS, error) {
	client := follow_service.NewFollowServiceClient(m.cli.Conn())
	return client.Follow(ctx, in, opts...)
}

func (m *defaultFollowService) GetFollowList(ctx context.Context, in *GetFollowListRQ, opts ...grpc.CallOption) (*GetFollowListRS, error) {
	client := follow_service.NewFollowServiceClient(m.cli.Conn())
	return client.GetFollowList(ctx, in, opts...)
}

func (m *defaultFollowService) GetFansList(ctx context.Context, in *GetFansListRQ, opts ...grpc.CallOption) (*GetFansListRS, error) {
	client := follow_service.NewFollowServiceClient(m.cli.Conn())
	return client.GetFansList(ctx, in, opts...)
}
