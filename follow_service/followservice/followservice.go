// Code generated by goctl. DO NOT EDIT!
// Source: follow_service.proto

package followservice

import (
	"context"

	"follow_system/follow_service/root/go/src/follow_system/pb/follow_service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FollowReq = follow_service.FollowReq
	FollowRsp = follow_service.FollowRsp

	FollowService interface {
		Ping(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*FollowRsp, error)
	}

	defaultFollowService struct {
		cli zrpc.Client
	}
)

func NewFollowService(cli zrpc.Client) FollowService {
	return &defaultFollowService{
		cli: cli,
	}
}

func (m *defaultFollowService) Ping(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*FollowRsp, error) {
	client := follow_service.NewFollowServiceClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
